{"version":3,"file":"GameOverScreen.js","sourceRoot":"","sources":["../../scripts/GameOverScreen.ts"],"names":["GameOverScreen","GameOverScreen.constructor","GameOverScreen.show","GameOverScreen.hide","GameOverScreen.updateHighScores","GameOverScreen.saveScore","GameOverScreen.startGame","GameOverScreen.mainScreen","GameOverScreen.setScore"],"mappings":"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","sourcesContent":["/// <reference path=\"typings/jquery/jquery.d.ts\" />\r\n/// <reference path=\"typings/knockout/knockout.d.ts\" />\r\n\r\n\"use strict\";\r\n\r\nimport {Frame} from \"Frame\";\r\nimport {Screen} from \"Screen\";\r\nimport * as Scores from \"HighScores\";\r\nimport * as ScreenManager from \"ScreenManager\";\r\nimport * as ko from \"knockout\";\r\nimport * as $ from \"jquery\";\r\n\r\nvar scores = new Scores.HighScoreStorage();\r\n\r\nexport class GameOverScreen extends Screen {\r\n    public highScores: KnockoutObservableArray<Scores.HighScore> = <KnockoutObservableArray<Scores.HighScore>>ko.observableArray();\r\n    public newHighScores: KnockoutObservableArray<Scores.HighScore> = <KnockoutObservableArray<Scores.HighScore>>ko.observableArray();\r\n    public score: KnockoutObservable<number> = <KnockoutObservable<number>>ko.observable();\r\n    public isHighScore: KnockoutObservable<boolean> = <KnockoutObservable<boolean>>ko.observable();\r\n    public name: KnockoutObservable<string> = <KnockoutObservable<string>>ko.observable();\r\n\r\n    constructor(engine: Frame) {\r\n        super(\"gameoverscreen\");\r\n\r\n        this.engine = engine;\r\n\r\n        this.updateHighScores();\r\n        ko.applyBindings(this, $(\"#gameoverscreen\")[0]);\r\n\r\n        $(\"#name\").on(\"keydown\", function (e): boolean {\r\n            //list of functional/control keys that you want to allow always\r\n            var keys = [8, 9, 16, 17, 18, 19, 20, 27, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 144, 145];\r\n\r\n            if ($.inArray(e.keyCode, keys) === -1) {\r\n                if ($(this).val().length >= scores.maxNameLength) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        });\r\n    }\r\n\r\n    public show(): void {\r\n        this.updateHighScores();\r\n        super.show();\r\n        $(\"#name\").first().focus();\r\n    }\r\n\r\n    public hide(): void {\r\n        super.hide();\r\n    }\r\n\r\n    private updateHighScores(): void {\r\n        this.highScores.removeAll();\r\n        this.newHighScores.removeAll();\r\n\r\n        var hs = scores.getHighScores();\r\n        hs.forEach(e => this.highScores.push(e));\r\n\r\n        var newhs = scores.getNewHighScores(\"\", this.score());\r\n        newhs.forEach(e => this.newHighScores.push(e));\r\n\r\n        this.isHighScore(scores.isHighScore(this.score()));\r\n    }\r\n\r\n    public saveScore(): void {\r\n        if (!this.name() || this.name().length < 3) { return; }\r\n\r\n        scores.addScore(this.name(), this.score());\r\n        this.mainScreen();\r\n    }\r\n\r\n    public startGame(): void {\r\n        this.hide();\r\n        ScreenManager.getScreen(\"gamescreen\").show();\r\n    }\r\n\r\n    public mainScreen(): void {\r\n        this.hide();\r\n        ScreenManager.getScreen(\"startscreen\").show();\r\n    }\r\n\r\n    engine: Frame;\r\n\r\n    setScore(score: number) {\r\n        this.score(score);\r\n    }\r\n}"]}